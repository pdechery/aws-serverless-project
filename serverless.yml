org: pdechery
service: aws-projects
frameworkVersion: "3"

provider:
  name: aws
  profile: default
  stage: dev
  runtime: python3.11

functions:
  producer:
    handler: producer.handler
    events:
      - httpApi:
          method: post
          path: /produce
    environment:
        QUEUE_URL: !Ref ArtistsQueue
  consumer:
    handler: consumer.handler
    timeout: 10 # seconds
    events:
      - sqs:
          arn: !GetAtt ArtistsQueue.Arn
          batchSize: 5

resources:
  Resources:
    ArtistsDB:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: artists
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
          - AttributeName: song
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
          - AttributeName: song
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    ArtistsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: !Sub '${AWS::StackName}-artists-queue'
        # 6 times the lambda function's timeout
        VisibilityTimeout: 60
        # Messages will be stored (and retried) up to 2 days
        MessageRetentionPeriod: 172800
        RedrivePolicy:
          # Jobs will be retried 5 times
          maxReceiveCount: 1
          # Send failed messages to the dead letter queue
          deadLetterTargetArn: !GetAtt ArtistsDLQ.Arn
    ArtistsDLQ:
      Type: AWS::SQS::Queue
      Properties:
        # Store messages up to 14 days (the max)
        MessageRetentionPeriod: 1209600


plugins:
  - serverless-python-requirements

package:
  patterns:
    - "!.git/**"
    - "!node_modules/**"
    - "!venv/**"
    - "!data/**"
